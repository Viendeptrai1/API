{
  "meta": {
    "title": "HƯỚNG DẪN AJAX V ỚI RESTFUL API TRONG SPRING BOOT",
    "source_pdf": "AJAX with RESTful API in Spring Boot.pdf",
    "created_from": "user-uploaded PDF",
    "created_at": "2025-09-24T13:06:50",
    "page_count": 11,
    "language": "vi-VN",
    "parser": "PyPDF2",
    "parse_error": null,
    "notes": "Tập trung nội dung: tích hợp jQuery, controller REST cho Category/Product, và các snippet AJAX (GET, POST/PUT với FormData, DELETE)."
  },
  "outline": {
    "detected_steps": [
      "1. THÊM THƯ VI ỆN AJAX: M Ở TRANG LAYOUT WEB (admin.jsp, web.jsp) thêm 02 l ệnh này vào th ẻ",
      "2. Controller API",
      "3. Thêm trang jsp đ ể hiện danh sách Category, thêm category, xóa category, ví d ụ ajax.jsp"
    ],
    "likely_headings": [
      "HƯỚNG DẪN AJAX V ỚI RESTFUL API TRONG SPRING BOOT"
    ]
  },
  "api": {
    "http_verbs_detected": [
      "DELETE",
      "POST",
      "PUT"
    ],
    "endpoints_detected": [
      "api/ca",
      "api/category",
      "api/category/addCategory",
      "api/category/deleteCategory?categor",
      "api/category/updateCategory",
      "api/product"
    ]
  },
  "ajax_patterns": {
    "jquery_included": false,
    "context_path_var": true,
    "getJSON_usage": true,
    "ajax_usage": true,
    "formdata_usage": true,
    "modal_bootstrap": true
  },
  "keywords": [
    {
      "term": "class",
      "count": 58
    },
    {
      "term": "import",
      "count": 40
    },
    {
      "term": "category",
      "count": 39
    },
    {
      "term": "new",
      "count": 32
    },
    {
      "term": "/div",
      "count": 30
    },
    {
      "term": "div",
      "count": 28
    },
    {
      "term": "response",
      "count": 24
    },
    {
      "term": "id",
      "count": 24
    },
    {
      "term": "return",
      "count": 23
    },
    {
      "term": "responseentity",
      "count": 19
    },
    {
      "term": "type",
      "count": 18
    },
    {
      "term": "btn",
      "count": 18
    },
    {
      "term": "icon",
      "count": 17
    },
    {
      "term": "@requestparam",
      "count": 15
    },
    {
      "term": "optcategory",
      "count": 15
    },
    {
      "term": "categoryid",
      "count": 14
    },
    {
      "term": "file",
      "count": 13
    },
    {
      "term": "//",
      "count": 13
    },
    {
      "term": "false",
      "count": 13
    },
    {
      "term": "true",
      "count": 12
    },
    {
      "term": "@validated",
      "count": 12
    },
    {
      "term": "categoryname",
      "count": 12
    },
    {
      "term": "function",
      "count": 12
    },
    {
      "term": "name",
      "count": 11
    },
    {
      "term": "button",
      "count": 11
    },
    {
      "term": "categoryservice",
      "count": 10
    },
    {
      "term": "if",
      "count": 10
    },
    {
      "term": ".get",
      "count": 10
    },
    {
      "term": "json",
      "count": 10
    },
    {
      "term": "ajax",
      "count": 9
    },
    {
      "term": "script",
      "count": 9
    },
    {
      "term": "/script",
      "count": 9
    },
    {
      "term": "public",
      "count": 9
    },
    {
      "term": "httpstatus.",
      "count": 9
    },
    {
      "term": "thêm",
      "count": 8
    },
    {
      "term": "var",
      "count": 8
    },
    {
      "term": "href",
      "count": 8
    },
    {
      "term": "string",
      "count": 8
    },
    {
      "term": "data",
      "count": 8
    },
    {
      "term": "modal",
      "count": 8
    }
  ],
  "inferred_summary": [
    "Minh họa dùng $.getJSON để tải danh sách Category và render vào bảng HTML.",
    "Form submit bằng AJAX với FormData để thêm/cập nhật Category có kèm file upload (icon)."
  ],
  "pages": [
    {
      "page": 1,
      "chars": 2132,
      "image_only": false,
      "text_preview": "HƯỚNG DẪN AJAX V ỚI RESTFUL API TRONG SPRING BOOT \n1. THÊM THƯ VI ỆN AJAX: M Ở TRANG LAYOUT WEB (admin.jsp, web.jsp) thêm 02 l ệnh này vào th ẻ \n<head> phiên b ản ajax tùy thu ộc vào template bootstrap đang s ử dụng \n<script src=\"https://code.jquery.com/jquery -3.6.4.min .js\"></script> \n<script>var contextPath = \"${pageContext.request.contextPath}\" </script> \nVí dụ: trang admin.jsp sử dụng bootstrap 5 \n<%@ page language =\"java\" contentType =\"text/html; charset=UTF -8\" \n pageEncoding =\"UTF-8\"%> \n<%@ include file=\"/common/taglib.js p\"%> \n<!DOCTYPE html> \n<html> \n<head> \n<!-- Required meta tags --> \n<meta charset=\"utf-8\"> \n<meta name=\"viewport\" content=\"width=device -width, initial -scale=1\" > \n \n<!-- Bootstrap CSS --> \n<link \n href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap .min.css\" \n rel=\"stylesheet\" \n integrity =\"sha384-\nEVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" \n crossorigin =\"anonymous\" > \n<link rel=\"stylesheet\" \n href=\"https://cdnjs.cloudflare.com/ajax/libs/font -awesome/6.0.0 -\nbeta2/css/all.min.css\" \n integrity=\"sha512-\nYWzhKL2whUzgiheMoBFwW8CKV4qpHQAEuvilg9FAn5VJUDwKZZxkJNuGM4XkWuk94WCrrwslk8yWNGmY1EduT\nA==\" \n crossorigin =\"anonymous\" referrerpolicy =\"no-referrer\" /> \n <link rel=\"stylesheet\" href=\"/css/mystyles.css\" /> \n <link rel=\"stylesheet\" href=\"https://cdnjs. cloudflare.com/ajax/libs/font -\nawesome/6.1.1/css/all.min.css\" integrity =\"sha512-\nKfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0\ng==\" crossorigin =\"anonymous\" referrerpolicy =\"no-referrer\" /> \n <link href=\"https://unpkg.com /boxicons@2.0.9/css/boxicons.min.css\" \nrel=\"stylesheet\" /> \n <script src=\"https://code.jquery.com/jquery -3.6.4.min.js\" ></script> \n <script>var contextPath = \"${pageContext.request.contextPath}\" </script> \n<title>Index</title> \n</head> \n<body> \n \n <header class =\"row\"> \n <div class=\"col\"> \n <%@include file=\"/common/admin/header.jsp\" %> \n </div> \n </header> \n <main class=\"container -fluid\"> \n <!"
    },
    {
      "page": 2,
      "chars": 1595,
      "image_only": false,
      "text_preview": "<sitemesh:write property ='body'></sitemesh:write > \n \n \n </div> \n </div> \n \n \n </main> \n <footer class=\"row\"> \n <div class=\"col\"> \n <%@include file=\"/common/admin/footer.jsp\" %> \n </div> \n </footer> \n \n \n \n<script \n \n src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min\n.js\" \n integrity =\"sha384-\nMrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" \n crossorigin =\"anonymous\" ></script> \n \n</body> \n</html> \n \n2. Controller API \npackage vn.iotstar.controllers.api; \n \nimport java.util.Optional; \nimport java.util.UUID; \n \nimport org.springframework.beans.factory.annotation.Autowired; \nimport org.springframework.http.HttpStatus; \nimport org.springframework.http.ResponseEntity; \nimport org.springframework.validation.annotation.Validated; \nimport org.springframework.web.bind.annotation.DeleteMapping; \nimport org.springframework.web.bind.annotation.GetMapping; \nimport org.springframework.web.bind.annotation.PostMapping; \nimport org.springframework .web.bind.annotation.PutMapping; \nimport org.springframework.web.bind.annotation.RequestMapping; \nimport org.springframework.web.bind.annotation.RequestParam; \nimport org.springframework.web.bind.annotation.RestController; \nimport org.springframework.web.multipart.MultipartFile; \n \nimport vn.iotstar.entity.Category; \nimport vn.iotstar.model.Response; \nimport vn.iotstar.service.ICategoryService; \nimport vn.iotstar.service.IStorageService; \n \n@RestController \n@RequestMapping (path = \"/api/ca tegory\") \npublic class CategoryAPIController { \n \n @Autowired \n private ICategoryService categoryService ;"
    },
    {
      "page": 3,
      "chars": 2041,
      "image_only": false,
      "text_preview": "@Autowired \n IStorageService storageService ; \n \n @GetMapping \n public ResponseEntity<?> getAllCategory() { \n return ResponseEntity. ok().body( categoryService .findAll()); \n //return new ResponseEntity<Response>(new Response(true, \"Thành \ncông\",categoryService.findAll()), HttpStatus.OK); \n } \n \n @PostMapping (path = \"/getCategory\" ) \n public ResponseEntity<?> getCategory( @Validated @RequestParam (\"id\") Long id) { \n Optional<Category> category = categoryService .findById( id); \n \n if (category .isPresent()) { \n // return ResponseEntity.ok().body(category.get()); \n return new ResponseEntity<Response>( new Response( true, \"Thành \ncông\", category .get()), HttpStatus. OK); \n } else { \n // return ResponseEntity.notFound().build(); \n return new ResponseEntity<Response>( new Response( false, \"Thất \nbại\", null), HttpStatus. NOT_FOUND ); \n } \n } \n \n @PostMapping (path = \"/addCategory\" ) \n public ResponseEntity<?> addCategory( @Validated @RequestParam (\"categoryName\" ) \nString categoryName , \n @Validated @RequestParam (\"icon\") MultipartFile icon) { \n Optional<Category> optCategory = \ncategoryService .findByCategoryName( categoryName ); \n \n if (optCategory .isPresent()) { \n return \nResponseEntity. status(HttpStatus. BAD_REQUEST ).body(\"Category đã tồn tại trong hệ \nthống\"); \n // return new ResponseEntity<Response>(new Response(false, \"Loại \nsản phẩm này đã \n // tồn tại trong hệ thống\", optCategory.get()), \nHttpStatus.BAD_REQUEST); \n } else { \n Category category = new Category(); \n // kiểm tra tồn tại file, lưu file \n if (!icon.isEmpty()) { \n UUID uuid = UUID.randomUUID (); \n String uuString = uuid.toString(); \n // lưu file vào trường Images \n category .setIcon( storageServi ce.getSorageFilename( icon, \nuuString )); \n storageService .store(icon, category .getIcon()); \n } \n \n category .setCategoryName( categoryName ); \n \n categoryService .save(category ); \n // return ResponseEntity.ok().body(category); \n return new ResponseEntity< Response>( new Response( true, \"Thêm \nThành côn"
    },
    {
      "page": 4,
      "chars": 1979,
      "image_only": false,
      "text_preview": "@PutMapping (path = \"/updateCategory\" ) \n public ResponseEntity<?> updateCategory( @Validated @RequestParam (\"categoryId\" ) \nLong categoryId , \n @Validated @RequestParam (\"categor yName\") String categoryName , \n @Validated @RequestParam (\"icon\") MultipartFile icon) { \n Optional<Category> optCategory = categoryService .findById( categoryId ); \n \n if (optCategory .isEmpty()) { \n return new ResponseEntity<Response>( new Response( false, \"Không \ntìm thấy Category\" , null), \n HttpStatus. BAD_REQUEST ); \n } else if (optCategory .isPresent()) { \n \n // kiểm tra tồn tại file, lưu file \n if (!icon.isEmpty()) { \n UUID uuid = UUID.randomUUID (); \n String uuString = uuid.toString(); \n // lưu fi le vào trường Images \n \n optCategory .get().setIcon( storageService .getSorageFilename( icon, uuString )); \n storageService .store(icon, optCategory .get().getIcon()); \n } \n \n optCategory .get().setCategoryName( categoryName ); \n categoryService .save(optCategory .get()); \n // return ResponseEntity.ok().body(category); \n return new ResponseEntity<Response>( new Response( true, \"Cập nhật \nThành công\" , optCategory .get()), \n HttpStatus. OK); \n } \n return null; \n } \n \n @DeleteMapping (path = \"/deleteCategory\" ) \n public ResponseEntity<?> deleteCategory( @Validated @RequestParam (\"categoryId\" ) \nLong categoryId ) { \n Optional<Category> optCategory = categoryService .findById( categoryId ); \n if (optCategory .isEmpty()) { \n return new ResponseEntity<Response>( new Response( false, \"Không \ntìm thấy Category\" , null), \n HttpStatus. BAD_REQUEST ); \n } else if (optCategory .isPresent()) { \n categoryService .delete( optCategory .get()); \n return ResponseEntity. ok().body( optCategory .get()); \n //return new ResponseEntity<Response> (new Response(true, \"Xóa \nThành công\", optCategory.get()), HttpStatus.OK); \n } \n \n return null; \n \n } \n} \npackage vn.iotstar.controllers.api; \n \nimport java.sql.Timestamp; \nimport java.util.Date; \n \nimport java.util.Optional; \nimport java.util.UUID;"
    },
    {
      "page": 5,
      "chars": 2109,
      "image_only": false,
      "text_preview": "import org.springframework. beans.BeanUtils; \nimport org.springframework.beans.factory.annotation.Autowired; \n \nimport org.springframework.http.HttpStatus; \nimport org.springframework.http.ResponseEntity; \n \nimport org.springframework.validation.annotation.Validated; \nimport org.springframe work.web.bind.annotation.GetMapping; \nimport org.springframework.web.bind.annotation.PostMapping; \nimport org.springframework.web.bind.annotation.RequestMapping; \nimport org.springframework.web.bind.annotation.RequestParam; \nimport org.springframework.web.bind .annotation.RestController; \nimport org.springframework.web.multipart.MultipartFile; \n \nimport vn.iotstar.entity.Category; \nimport vn.iotstar.entity.Product; \nimport vn.iotstar.model.ProductModel; \nimport vn.iotstar.model.Response; \n \nimport vn.iotstar.service.ICa tegoryService; \nimport vn.iotstar.service.IProductService; \nimport vn.iotstar.service.IStorageService; \n \n@RestController \n@RequestMapping (path = \"/api/product\" ) \npublic class ProductApiController { \n \n @Autowired \n IProductService productService ; \n @Autowired \n ICategoryService categoryService ; \n \n @Autowired \n IStorageService storageService ; \n \n \n @GetMapping \n public ResponseEntity<?> getAllProduct() { \n return new ResponseEntity<Response>( new Response( true, \"Thành công\" , \nproductService .findAll()), \n HttpStatus. OK); \n } \n \n @PostMapping (path = \"/addProduct\" ) \n public ResponseEntity<?> saveOrUpdate( \n @Validated @RequestParam (\"productName\" ) String productName , \n @RequestParam (\"imageFile\" ) MultipartFile productImages , \n //@RequestParam(\"images\") String images, \n @Validat ed @RequestParam (\"unitPrice\" ) Double productPrice , \n @Validated @RequestParam (\"discount\" ) Double promotionalPrice , \n @Validated @RequestParam (\"description\" ) String \nproductDescription , \n @Validated @RequestParam (\"categoryId\" ) Long categoryId , \n @Validat ed @RequestParam (\"quantity\" ) Integer quantity , \n @Validated @RequestParam (\"status\" ) Short status) { \n Optiona"
    },
    {
      "page": 6,
      "chars": 1702,
      "image_only": false,
      "text_preview": "// return ResponseEntity.status(HttpSta tus.BAD_REQUEST).body(\"Sản \nphẩm này đã \n // tồn tại trong hệ thống\"); \n return new ResponseEntity<Response>( \n new Response( false, \"Sản phẩm này đã tồn tại trong \nhệ thống\" , optProduct .get()), \n HttpStatus. BAD_REQUEST ); \n } else { \n Product product = new Product(); \n Timestamp timestamp = new Timestamp( new \nDate(System. currentTimeMillis ()).getTime()); \n \n try { \n ProductModel proModel = new ProductModel(); \n //copy từ Model sang Entity \n BeanUtils. copyProperties (proModel , product); \n //xử lý category liên quan product \n Category cateEntity = new Category(); \n cateEntity .setCategoryId( proModel .getCategoryId()); \n product.setCategory( cateEntity ); \n //kiểm tra tồn tại file, lưu file \n if(!proModel .getImageFile().isEmpty()) { \n UUID uuid = UUID.randomUUID (); \n String uuString = uuid.toString(); \n //lưu file vào trường Images \n \n product.setImages( storageService .getSorageFilename( proModel .getImageFile(), \nuuString )); \n storageService .store(proModel .getImageFile(), \nproduct.getImages()); \n } \n product.setCreateDate( timestamp ); \n \n \n productService .save(product); \n \n optProduct = productService .findByCreateDate( timestamp ); \n \n \n } catch (Exception e) { \n e.printStackTrace(); \n } \n // return ResponseEntity.ok(). body(product); \n return new ResponseEntity<Response>( new Response( true, \"Thành \ncông\", optProduct .get()),HttpStatus. OK); \n } \n } \n \n} \n \n3. Thêm trang jsp đ ể hiện danh sách Category, thêm category, xóa category, ví d ụ ajax.jsp \nHiển thị danh sách category b ằng API và Ajax \n<table class=\"table table -striped table -responsive\" > \n <thead class=\"thead-inverse\" > \n <tr> \n <th>Id</th> \n <th>icon</th>"
    },
    {
      "page": 7,
      "chars": 1859,
      "image_only": false,
      "text_preview": "<th>Name</th> \n <th>Actions</th> \n </tr> \n </thead> \n </table> \n \n \n<script type=\"text/javascript\" > \n /* Get category */ \n $(document).ready( function () { \n $.getJSON(contextPath + '/api/category' , function (json) { \n var tr=[]; \n for (var i = 0; i < json.len gth; i++) { \n tr.push( '<tr>'); \n tr.push( '<td>' + json[i].categoryId + '</td>'); \n tr.push( '<td>' + '<img \nsrc=\"/admin/categories/images/' + json[i].icon + '\" style=\"width:70px\" class=\"img -\nfluid\" alt=\"\"></td>' ); \n tr.push( '<td>' + json[i].catego ryName + '</td>'); \n tr.push( '<td>' + '<a href=\"#\" data -id=\"'+ \njson[i].categoryId+ '\" id=\"editcate\" class=\"btn btn -outline-warning\"><i class=\"fa fa -\nedit\"></i></a>' \n + '<a href=\"#\" data -id=\"'+ \njson[i].categoryId+ '\" id=\"categoryId\" class=\"btn btn -outline-danger\"><i class=\"fa fa -\ntrash\"></i></a>' ); \n tr.push( '</tr>'); \n } \n $('table').append($(tr.join( ''))); \n }); \n</script> \n================== \nThêm category b ằng API và Ajax s ử dụng Modal bootstrap \n <p><button class=\"btn btn -success ml -auto\" \nonclick=\"showCreateNewCategoryModal()\" ><i class=\"fas fa-plus mr-2\"></i>Thêm Category \nAjax</button></p> \n \n<div class=\"modal\" tabindex =\"-1\" role=\"dialog\" id=\"createCategoryModal\" > \n <div class=\"modal-dialog\" role=\"document\" > \n <div class=\"modal-content\" > \n <form id=\"addCategory\" method=\"post\" onsubmit =\"return false;\" \nenctype=\"multipart/form -data\"> \n <div class=\"modal-header\"> \n <h5 class=\"modal-title\">Add Cate gory</h5> \n <button type=\"button\" class=\"close\" data-dismiss=\"modal\"> \n <span aria-hidden=\"true\">&times;</span> \n </button> \n </div> \n <div class=\"modal-body\"> \n \n <div class=\"form-group\"> \n <label for=\"new_categoryname\" >Category \nName</label> \n <input type=\"text\" class=\"form-control\" \nid=\"new_categoryname\" name=\"categoryName\" > \n </div> \n <div class=\"form-group\"> \n <label for=\"new_icon\" >Icon</label>"
    },
    {
      "page": 8,
      "chars": 1383,
      "image_only": false,
      "text_preview": "<input type=\"file\" class=\"form-control\" \nid=\"new_icon\" name=\"icon\"> \n </div> \n <div class=\"form-group row\" > \n <div class=\"col text -center\"> \n <button type=\"submit\" class=\"btn btn -\nprimary btn -block\">Add</button> \n </div> \n </div> \n \n </div> \n <div class=\"modal-footer\"> \n <button type=\"button\" class=\"btn btn-secondary\" \n data-dismiss=\"modal\">Đóng</button> \n </div> \n </form> \n </div> \n \n </div> \n</div> \n<script type=\"text/javascript\" > \n \n /* Add category */ \n $(\"form#addCategory\" ).submit( function (e) { \n e.preventDefault(); \n var formData = new FormData( this); \n \n $.ajax({ \n url: contextPath + '/api/category/addCategory' , \n type: 'POST', \n dataType: \"json\", \n data: formData, \n success: function (data) { \n location.reload(); \n }, \n cache: false, \n contentType: false, \n processData: false \n }); \n }); \n \n function showCreateNewCategoryModal(){ \n $('#new_categoryname' )[0].value = ''; \n $('#createCategoryModal' ).modal( 'show'); \n } \n \n</script> \n====================== \nCập nh ật Category b ằng API và Ajax v ới Modal \n<div class=\"modal\" tabindex =\"-1\" role=\"dialog\" id=\"updateCategoryInfoModal\" > \n <div class=\"modal-dialog\" role=\"document\" > \n <div class=\"modal-content\" > \n <div class=\"modal-header\"> \n <h5 class=\"modal-title\">Update Category </h5> \n <button type=\"button\" class=\"close\" data-dismiss=\"modal\"> \n <span aria-hidden=\"true\">&times;</span> \n </button>"
    },
    {
      "page": 9,
      "chars": 1456,
      "image_only": false,
      "text_preview": "</div> \n <div class=\"modal-body\"> \n <div class=\"card\"> \n <div class=\"card-header\"> \n <h5><i class=\"far fa-address-card mr-\n1\"></i>Category </h5> \n </div> \n <div class=\"card-body pb-0\"> \n <p id=\"updateCategoryInfoModalId\" ></p> \n <p id=\"updateCategoryInfoModalName\" ></p> \n <p id=\"updateCategoryInfoModalIcon\" ></p> \n </div> \n </div> \n \n <div class=\"card mt -2\"> \n <div class=\"card-header\"> \n <h5><i class=\"far fa-address-card mr-\n1\"></i>Update Category </h5> \n </div> \n <div class=\"card-body pb-0\"> \n <form id=\"updateCategory\" method=\"post\" \nonsubmit=\"return false;\" enctype=\"multipart/form -data\"> \n <div class=\"form-group\"> \n <label \nfor=\"categoryName\" >Category Name </label> \n <input type=\"text\" class=\"form-\ncontrol\" id=\"categoryName_up\" name=\"categoryName\" > \n </div> \n <div class=\"form-group\"> \n <label for=\"new_icon\" >Icon</label> \n <input type=\"file\" class=\"form-control\" \nid=\"icon_up\" name=\"icon\"> \n </div> \n <input type=\"hidden\" id=\"categoryId_up\" \nname=\"categoryId\" > \n <div class=\"form-group row\" > \n <div class=\"col text -center\"> \n <button type=\"submit\" \nclass=\"btn btn -primary btn -block\" >Cập nhật </button> \n </div> \n </div> \n </form> \n </div> \n </div> \n \n </div> \n <div class=\"modal-footer\"> \n <button type=\"button\" class=\"btn btn -secondary\" \n data-dismiss=\"modal\">Đóng</button> \n </div> \n </div> \n </div> \n</div> \n \n<script type=\"text/javascript\" > \n \n /* Edit */ \n function showEditCategoryModal(categoryId, categoryName, icon, btn){"
    },
    {
      "page": 10,
      "chars": 1650,
      "image_only": false,
      "text_preview": "/* $(\"input[name=categoryActive][value=\" + active + \"]\").prop('checked', \ntrue); */ \n $('#updateCategoryInfoModalId' )[0].innerText = \"Category ID: \" + \ncategoryId; \n $('#updateCategoryInfoModalName' )[0].innerText = \"Category Name: \" + \ncategoryName; \n $('#updateCategoryInfoModalIcon' )[0].innerText = 'Icon: ' + icon; \n /* $('#updateCategoryInfoModalActive')[0].innerText = 'Icon: ' + (active \n== 'true' ? 'Đang cho phép bán' : 'Đã vô hiệu hóa'); */ \n \n $('#categoryName_up' )[0].value = categoryName; \n $('#categoryId_up' )[0].value = categoryId; \n \n $('#updateCategoryInfoMod al').modal( 'show'); \n } \n \n $(\"form#updateCategory\" ).submit( function (e) { \n e.preventDefault(); \n var formData = new FormData( this); \n \n $.ajax({ \n url: contextPath + '/api/category/updateCategory' , \n type: 'PUT', \n dataType: \"json\", \n data: formData, \n success: function (data) { \n location.reload(); \n }, \n cache: false, \n contentType: false, \n processData: false \n }); \n }); \n</script> \n \nXóa Category b ằng API và Ajax \n<a href=\"#\" data -id=\"'+ json[i].categoryId+ '\" id=\"categoryId\" class=\"btn btn -outline-\ndanger\"><i class=\"fa fa -trash\"></i></a> \n<script type=\"text/javascript\" > \n \n $(document).delegate( '#categoryId' , 'click', function () { \n var id = $( this).data('id'); \n if (confirm( 'Do you really want to delete record?' )) { \n var parent = $( this).parent().parent(); \n $.ajax({ \n type: \"DELETE\" , \n url: contextPath + \n'/api/category/deleteCategory?categor yId=' + id, \n dataType: \"json\", \n data:id, \n success: function () { \n parent.fadeOut( 'slow', function () { \n $(this).remove(); \n }); \n location.reload( true) \n }, \n error: function () {"
    },
    {
      "page": 11,
      "chars": 104,
      "image_only": false,
      "text_preview": "} \n }); \n } \n }); \n \n }); \n</script> \nBài tập thêm : Xây d ựng ch ức năng CRUD b ảng Products b ằng Ajax"
    }
  ]
}